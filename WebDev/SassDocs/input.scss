
/* 选择器嵌套 */
#main p {
    color: #00ff00;
    width: 97%;

    .redbox {
        background-color: #ff0000;
        color: #000000;
    }
}
/* 嵌套规则可用于避免父选择器重复 */
#main {
    width: 97%;

    p, div {
        font-size: 2em;
        a { font-weight: bold; }
    }

    pre { font-size: 3em; }
}

/* 引用父元素选择器& */
a {
    font-weight: bold;
    text-decoration: none;
    &:hover { text-decoration: underline; }
    body.firefox & { font-weight: normal; }
}
/* &将向上迭代所有父选择器 */
#main {
    color: block;
    a {
        font-weight: bold;
        &:hover { color: red; }
    }
}
/* &必须作为第一个字符出现，但支持后缀 */
#main {
    color: black;
    &-sidebar { border: 1px solid; }
}

/* 嵌套属性，类似于font-族的各种属性，只需要写一次 */
.funky {
    font: {
        family: fantasy;
        size: 30em;
        weight: bold;
    }
}
/* 命名空间可以有自己的属性值 */
.funky {
    font: 20px/24px fantasy {
        weigth: bold;
    }
}


/* SassScript */

/* 变量$，有作用域限制，_和-可以互换 */
$width: 5em;
#main {
    width: $width;
}
/* 使用!global关键字定义全局变量 */
#main {
    $width2: 5em !global;
        width: $width2;
}
#sidebar {
    width: $width;
}

/* 插值 */
$name: foo;
    $attr: border;
p.#{$name} {
    #{$attr}-color: blue;   
}

/* @extend */
.error {
    border: 1px #f00;
    background-color: #fdd;
}
.seriousError {
    @extend .error;
    border-width: 3px;
}
/* serioousError继承了error的所有属性，并作为其子元素 */

/* @at-root，常用的一个指令 */
.parent {
    color: #abc;
    @at-root .child { color: #def }
}

/* @if，条件语句，可接@else */
p {
    @if 1 + 1 == 2 { border: 1px solid;  }
    @if 5 < 3      { border: 2px dotted; }
    @if null       { border: 3px double; }
}

/* @for语句 */
@for $i from 1 through 3 {
    .item-#{$i} { width: 2em * $i};
}

/* @each语句 */
@each $var in a, b, c, d {
    .#{$var}-icon {
        background-image: url('/images/#{$var}.png');
    }
}


/* @mixin混入指令，定义样式 */
@mixin large-text {
    font: {
        family: Arial;
        size: 20px;
        weight: bold;
    }
    color: #ffffff;
}
/* @include引用混合样式 */
.page-title {
    @include large-text;
    padding: 4px;
    margin-top: 10px;
}
/* 混入也支持带参数，像函数一样 */

/* 引用混入的内容将出现在@content的位置 */
@mixin apply {
    * html {
        @content;
    }
}
@include apply {
    #logo {
        background-image: url(a.gif);
    }
}

/* sass也支持自定义函数 */